#!/usr/bin/make -f
# -*- makefile -*-
# Build gcc-mingw-w64 using gcc-4.5-source.
# Copyright Â© 2010 Stephen Kitt <steve@sk2.org>

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

top_dir := $(shell pwd)
gcc_dir := /usr/src/gcc-4.5
upstream_dir := $(top_dir)/src
build64_dir := $(top_dir)/build64
build32_dir := $(top_dir)/build32
stampdir := $(top_dir)/stamp
deb_version := $(shell dpkg-parsechangelog | sed -ne "s/^Version: \(.*\)/\1/p")
deb_upstream_version := $(shell echo $(deb_version) | cut -d- -f1)
gnu_upstream_version := $(shell echo $(deb_upstream_version) | cut -d. -f1-3)
package := gcc-mingw-w64

target32 := i486-w64-mingw32
target64 := amd64-w64-mingw32

CFLAGS = -Wall -g
# TODO Handle install with nostrip?

ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
    CFLAGS += -O0
else
    CFLAGS += -O2
endif

#number of jobs to run for build
ifeq ($(USE_NJOBS),no)
  NJOBS :=
  USE_CPUS := 1
else
  ifeq ($(with_java),yes)
    MEM_PER_CPU = 192
  else
    MEM_PER_CPU = 128
  endif
  NUM_CPUS := $(shell if echo $(USE_NJOBS) | grep -q -E '^[0-9]+$$'; \
                        then echo $(USE_NJOBS); \
                        else getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1; fi)
  USE_CPUS := $(shell mt=`awk '/^MemTotal/ { print $$2 }' /proc/meminfo`; \
                        awk -vn=$(NUM_CPUS) -vmt=$$mt -vm=$(MEM_PER_CPU) \
                                'END { mt/=1024; n2 = int(mt/m); print n==1 ? 1 : n2<n+1 ? n2 : n+1}' < /dev/null)
  ifneq (,$(strip $(USE_CPUS)))
    NJOBS := -j $(USE_CPUS)
  endif
endif

# Support parallel=<n> in DEB_BUILD_OPTIONS (see #209008)
ifneq (,$(filter parallel=%,$(subst $(COMMA), ,$(DEB_BUILD_OPTIONS))))
  NJOBS := -j $(subst parallel=,,$(filter parallel=%,$(subst $(COMMA), ,$(DEB_BUILD_OPTIONS))))
endif

ifeq ($(with_pascal),yes)
  NJOBS :=
endif

# Patch targets
patchdir = $(gcc_dir)/debian/patches
series_file = series
unpack_stamp = $(stampdir)/unpack
patch_stamp = $(stampdir)/patch
GFDL_INVARIANT_FREE=yes
include $(gcc_dir)/debian/rules.patch

unpack: $(unpack_stamp)
$(unpack_stamp):
	tar xJf $(gcc_dir)/gcc-$(gnu_upstream_version)-dfsg.tar.xz
	rm -rf $(upstream_dir)
	mv gcc-$(deb_upstream_version) $(upstream_dir)
	mkdir -p $(stampdir)
	touch $@
	# Apply our extra patch here...
	patch -p0 < debian/patches/mingw-include.patch

clean:
	dh_testdir
	dh_testroot
	dh_clean
	rm -rf $(stampdir) $(build32_dir) $(build64_dir) $(upstream_dir) .pc autotools_files series

CONFFLAGS = --disable-shared --disable-multilib --prefix=/usr --with-system-zlib --libexecdir=/usr/lib --without-included-gettext

configure32-stamp: $(patch_stamp)
	dh_testdir
	mkdir -p $(build32_dir)
	cd $(build32_dir) && \
	$(upstream_dir)/configure $(CONFFLAGS) --target=$(target32)
	touch $@
configure64-stamp: $(patch_stamp)
	dh_testdir
	mkdir -p $(build64_dir)
	cd $(build64_dir) && \
	$(upstream_dir)/configure $(CONFFLAGS) --enable-64bit --target=$(target64)
	touch $@

build: build32-stamp build64-stamp
build32-stamp: configure32-stamp
	dh_testdir
	cd $(build32_dir) && $(MAKE) $(NJOBS) all-gcc
	touch $@
build64-stamp: configure64-stamp
	dh_testdir
	cd $(build64_dir) && $(MAKE) $(NJOBS) all-gcc
	touch $@

install: install-stamp
install-stamp: build32-stamp build64-stamp
	dh_testdir
	dh_testroot
	dh_clean -k
	cd $(build32_dir) && make install-gcc DESTDIR=$(top_dir)/debian/$(package)
	cd $(build64_dir) && make install-gcc DESTDIR=$(top_dir)/debian/$(package)

	touch $@

binary-indep:
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installman
	dh_installchangelogs $(upstream_dir)/ChangeLog
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch

.PHONY: binary-indep binary-arch binary clean build install
